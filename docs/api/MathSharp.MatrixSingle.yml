### YamlMime:ManagedReference
items:
- uid: MathSharp.MatrixSingle
  commentId: T:MathSharp.MatrixSingle
  id: MatrixSingle
  parent: MathSharp
  children:
  - MathSharp.MatrixSingle._v0
  - MathSharp.MatrixSingle._v1
  - MathSharp.MatrixSingle._v2
  - MathSharp.MatrixSingle._v3
  - MathSharp.MatrixSingle.op_Addition(MathSharp.MatrixSingle@,MathSharp.MatrixSingle@)
  - MathSharp.MatrixSingle.op_Multiply(MathSharp.MatrixSingle@,System.Runtime.Intrinsics.Vector128{System.Single})
  - MathSharp.MatrixSingle.op_Multiply(MathSharp.MatrixSingle@,System.Single)
  - MathSharp.MatrixSingle.op_Multiply(System.Runtime.Intrinsics.Vector128{System.Single},MathSharp.MatrixSingle@)
  - MathSharp.MatrixSingle.op_Multiply(System.Single,MathSharp.MatrixSingle@)
  - MathSharp.MatrixSingle.op_Subtraction(MathSharp.MatrixSingle@,MathSharp.MatrixSingle@)
  - MathSharp.MatrixSingle.op_UnaryNegation(MathSharp.MatrixSingle@)
  langs:
  - csharp
  - vb
  name: MatrixSingle
  nameWithType: MatrixSingle
  fullName: MathSharp.MatrixSingle
  type: Struct
  source:
    remote:
      path: sources/MathSharp/Matrix/MatrixSingle.cs
      branch: dev-john
      repo: https://github.com/johnkellyoxford/MathSharp.git
    id: MatrixSingle
    path: Matrix/MatrixSingle.cs
    startLine: 9
  assemblies:
  - MathSharp
  namespace: MathSharp
  syntax:
    content: >-
      [Aligned(16)]

      public struct MatrixSingle
    content.vb: >-
      <Aligned(16)>

      Public Structure MatrixSingle
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: MathSharp.Attributes.AlignedAttribute
    ctor: MathSharp.Attributes.AlignedAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 16
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: MathSharp.MatrixSingle._v0
  commentId: F:MathSharp.MatrixSingle._v0
  id: _v0
  parent: MathSharp.MatrixSingle
  langs:
  - csharp
  - vb
  name: _v0
  nameWithType: MatrixSingle._v0
  fullName: MathSharp.MatrixSingle._v0
  type: Field
  source:
    remote:
      path: sources/MathSharp/Matrix/MatrixSingle.cs
      branch: dev-john
      repo: https://github.com/johnkellyoxford/MathSharp.git
    id: _v0
    path: Matrix/MatrixSingle.cs
    startLine: 14
  assemblies:
  - MathSharp
  namespace: MathSharp
  syntax:
    content: public Vector128<float> _v0
    return:
      type: System.Runtime.Intrinsics.Vector128{System.Single}
    content.vb: Public _v0 As Vector128(Of Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathSharp.MatrixSingle._v1
  commentId: F:MathSharp.MatrixSingle._v1
  id: _v1
  parent: MathSharp.MatrixSingle
  langs:
  - csharp
  - vb
  name: _v1
  nameWithType: MatrixSingle._v1
  fullName: MathSharp.MatrixSingle._v1
  type: Field
  source:
    remote:
      path: sources/MathSharp/Matrix/MatrixSingle.cs
      branch: dev-john
      repo: https://github.com/johnkellyoxford/MathSharp.git
    id: _v1
    path: Matrix/MatrixSingle.cs
    startLine: 15
  assemblies:
  - MathSharp
  namespace: MathSharp
  syntax:
    content: public Vector128<float> _v1
    return:
      type: System.Runtime.Intrinsics.Vector128{System.Single}
    content.vb: Public _v1 As Vector128(Of Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathSharp.MatrixSingle._v2
  commentId: F:MathSharp.MatrixSingle._v2
  id: _v2
  parent: MathSharp.MatrixSingle
  langs:
  - csharp
  - vb
  name: _v2
  nameWithType: MatrixSingle._v2
  fullName: MathSharp.MatrixSingle._v2
  type: Field
  source:
    remote:
      path: sources/MathSharp/Matrix/MatrixSingle.cs
      branch: dev-john
      repo: https://github.com/johnkellyoxford/MathSharp.git
    id: _v2
    path: Matrix/MatrixSingle.cs
    startLine: 16
  assemblies:
  - MathSharp
  namespace: MathSharp
  syntax:
    content: public Vector128<float> _v2
    return:
      type: System.Runtime.Intrinsics.Vector128{System.Single}
    content.vb: Public _v2 As Vector128(Of Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathSharp.MatrixSingle._v3
  commentId: F:MathSharp.MatrixSingle._v3
  id: _v3
  parent: MathSharp.MatrixSingle
  langs:
  - csharp
  - vb
  name: _v3
  nameWithType: MatrixSingle._v3
  fullName: MathSharp.MatrixSingle._v3
  type: Field
  source:
    remote:
      path: sources/MathSharp/Matrix/MatrixSingle.cs
      branch: dev-john
      repo: https://github.com/johnkellyoxford/MathSharp.git
    id: _v3
    path: Matrix/MatrixSingle.cs
    startLine: 17
  assemblies:
  - MathSharp
  namespace: MathSharp
  syntax:
    content: public Vector128<float> _v3
    return:
      type: System.Runtime.Intrinsics.Vector128{System.Single}
    content.vb: Public _v3 As Vector128(Of Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MathSharp.MatrixSingle.op_Addition(MathSharp.MatrixSingle@,MathSharp.MatrixSingle@)
  commentId: M:MathSharp.MatrixSingle.op_Addition(MathSharp.MatrixSingle@,MathSharp.MatrixSingle@)
  id: op_Addition(MathSharp.MatrixSingle@,MathSharp.MatrixSingle@)
  parent: MathSharp.MatrixSingle
  langs:
  - csharp
  - vb
  name: Addition(MatrixSingle, MatrixSingle)
  nameWithType: MatrixSingle.Addition(MatrixSingle, MatrixSingle)
  fullName: MathSharp.MatrixSingle.Addition(MathSharp.MatrixSingle, MathSharp.MatrixSingle)
  type: Operator
  source:
    remote:
      path: sources/MathSharp/Matrix/MatrixSingle.cs
      branch: dev-john
      repo: https://github.com/johnkellyoxford/MathSharp.git
    id: op_Addition
    path: Matrix/MatrixSingle.cs
    startLine: 90
  assemblies:
  - MathSharp
  namespace: MathSharp
  syntax:
    content: public static MatrixSingle operator +(in MatrixSingle left, in MatrixSingle right)
    parameters:
    - id: left
      type: MathSharp.MatrixSingle
    - id: right
      type: MathSharp.MatrixSingle
    return:
      type: MathSharp.MatrixSingle
    content.vb: Public Shared Operator +(ByRef left As MatrixSingle, ByRef right As MatrixSingle) As MatrixSingle
  overload: MathSharp.MatrixSingle.op_Addition*
  nameWithType.vb: MatrixSingle.Addition(ByRef MatrixSingle, ByRef MatrixSingle)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: MathSharp.MatrixSingle.Addition(ByRef MathSharp.MatrixSingle, ByRef MathSharp.MatrixSingle)
  name.vb: Addition(ByRef MatrixSingle, ByRef MatrixSingle)
- uid: MathSharp.MatrixSingle.op_Subtraction(MathSharp.MatrixSingle@,MathSharp.MatrixSingle@)
  commentId: M:MathSharp.MatrixSingle.op_Subtraction(MathSharp.MatrixSingle@,MathSharp.MatrixSingle@)
  id: op_Subtraction(MathSharp.MatrixSingle@,MathSharp.MatrixSingle@)
  parent: MathSharp.MatrixSingle
  langs:
  - csharp
  - vb
  name: Subtraction(MatrixSingle, MatrixSingle)
  nameWithType: MatrixSingle.Subtraction(MatrixSingle, MatrixSingle)
  fullName: MathSharp.MatrixSingle.Subtraction(MathSharp.MatrixSingle, MathSharp.MatrixSingle)
  type: Operator
  source:
    remote:
      path: sources/MathSharp/Matrix/MatrixSingle.cs
      branch: dev-john
      repo: https://github.com/johnkellyoxford/MathSharp.git
    id: op_Subtraction
    path: Matrix/MatrixSingle.cs
    startLine: 94
  assemblies:
  - MathSharp
  namespace: MathSharp
  syntax:
    content: public static MatrixSingle operator -(in MatrixSingle left, in MatrixSingle right)
    parameters:
    - id: left
      type: MathSharp.MatrixSingle
    - id: right
      type: MathSharp.MatrixSingle
    return:
      type: MathSharp.MatrixSingle
    content.vb: Public Shared Operator -(ByRef left As MatrixSingle, ByRef right As MatrixSingle) As MatrixSingle
  overload: MathSharp.MatrixSingle.op_Subtraction*
  nameWithType.vb: MatrixSingle.Subtraction(ByRef MatrixSingle, ByRef MatrixSingle)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: MathSharp.MatrixSingle.Subtraction(ByRef MathSharp.MatrixSingle, ByRef MathSharp.MatrixSingle)
  name.vb: Subtraction(ByRef MatrixSingle, ByRef MatrixSingle)
- uid: MathSharp.MatrixSingle.op_Multiply(MathSharp.MatrixSingle@,System.Single)
  commentId: M:MathSharp.MatrixSingle.op_Multiply(MathSharp.MatrixSingle@,System.Single)
  id: op_Multiply(MathSharp.MatrixSingle@,System.Single)
  parent: MathSharp.MatrixSingle
  langs:
  - csharp
  - vb
  name: Multiply(MatrixSingle, Single)
  nameWithType: MatrixSingle.Multiply(MatrixSingle, Single)
  fullName: MathSharp.MatrixSingle.Multiply(MathSharp.MatrixSingle, System.Single)
  type: Operator
  source:
    remote:
      path: sources/MathSharp/Matrix/MatrixSingle.cs
      branch: dev-john
      repo: https://github.com/johnkellyoxford/MathSharp.git
    id: op_Multiply
    path: Matrix/MatrixSingle.cs
    startLine: 98
  assemblies:
  - MathSharp
  namespace: MathSharp
  syntax:
    content: public static MatrixSingle operator *(in MatrixSingle left, float scalar)
    parameters:
    - id: left
      type: MathSharp.MatrixSingle
    - id: scalar
      type: System.Single
    return:
      type: MathSharp.MatrixSingle
    content.vb: Public Shared Operator *(ByRef left As MatrixSingle, scalar As Single) As MatrixSingle
  overload: MathSharp.MatrixSingle.op_Multiply*
  nameWithType.vb: MatrixSingle.Multiply(ByRef MatrixSingle, Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: MathSharp.MatrixSingle.Multiply(ByRef MathSharp.MatrixSingle, System.Single)
  name.vb: Multiply(ByRef MatrixSingle, Single)
- uid: MathSharp.MatrixSingle.op_Multiply(System.Single,MathSharp.MatrixSingle@)
  commentId: M:MathSharp.MatrixSingle.op_Multiply(System.Single,MathSharp.MatrixSingle@)
  id: op_Multiply(System.Single,MathSharp.MatrixSingle@)
  parent: MathSharp.MatrixSingle
  langs:
  - csharp
  - vb
  name: Multiply(Single, MatrixSingle)
  nameWithType: MatrixSingle.Multiply(Single, MatrixSingle)
  fullName: MathSharp.MatrixSingle.Multiply(System.Single, MathSharp.MatrixSingle)
  type: Operator
  source:
    remote:
      path: sources/MathSharp/Matrix/MatrixSingle.cs
      branch: dev-john
      repo: https://github.com/johnkellyoxford/MathSharp.git
    id: op_Multiply
    path: Matrix/MatrixSingle.cs
    startLine: 102
  assemblies:
  - MathSharp
  namespace: MathSharp
  syntax:
    content: public static MatrixSingle operator *(float scalar, in MatrixSingle right)
    parameters:
    - id: scalar
      type: System.Single
    - id: right
      type: MathSharp.MatrixSingle
    return:
      type: MathSharp.MatrixSingle
    content.vb: Public Shared Operator *(scalar As Single, ByRef right As MatrixSingle) As MatrixSingle
  overload: MathSharp.MatrixSingle.op_Multiply*
  nameWithType.vb: MatrixSingle.Multiply(Single, ByRef MatrixSingle)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: MathSharp.MatrixSingle.Multiply(System.Single, ByRef MathSharp.MatrixSingle)
  name.vb: Multiply(Single, ByRef MatrixSingle)
- uid: MathSharp.MatrixSingle.op_Multiply(MathSharp.MatrixSingle@,System.Runtime.Intrinsics.Vector128{System.Single})
  commentId: M:MathSharp.MatrixSingle.op_Multiply(MathSharp.MatrixSingle@,System.Runtime.Intrinsics.Vector128{System.Single})
  id: op_Multiply(MathSharp.MatrixSingle@,System.Runtime.Intrinsics.Vector128{System.Single})
  parent: MathSharp.MatrixSingle
  langs:
  - csharp
  - vb
  name: Multiply(MatrixSingle, Vector128<Single>)
  nameWithType: MatrixSingle.Multiply(MatrixSingle, Vector128<Single>)
  fullName: MathSharp.MatrixSingle.Multiply(MathSharp.MatrixSingle, System.Runtime.Intrinsics.Vector128<System.Single>)
  type: Operator
  source:
    remote:
      path: sources/MathSharp/Matrix/MatrixSingle.cs
      branch: dev-john
      repo: https://github.com/johnkellyoxford/MathSharp.git
    id: op_Multiply
    path: Matrix/MatrixSingle.cs
    startLine: 106
  assemblies:
  - MathSharp
  namespace: MathSharp
  syntax:
    content: public static MatrixSingle operator *(in MatrixSingle left, Vector128<float> vectorOfScalar)
    parameters:
    - id: left
      type: MathSharp.MatrixSingle
    - id: vectorOfScalar
      type: System.Runtime.Intrinsics.Vector128{System.Single}
    return:
      type: MathSharp.MatrixSingle
    content.vb: Public Shared Operator *(ByRef left As MatrixSingle, vectorOfScalar As Vector128(Of Single)) As MatrixSingle
  overload: MathSharp.MatrixSingle.op_Multiply*
  nameWithType.vb: MatrixSingle.Multiply(ByRef MatrixSingle, Vector128(Of Single))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: MathSharp.MatrixSingle.Multiply(ByRef MathSharp.MatrixSingle, System.Runtime.Intrinsics.Vector128(Of System.Single))
  name.vb: Multiply(ByRef MatrixSingle, Vector128(Of Single))
- uid: MathSharp.MatrixSingle.op_Multiply(System.Runtime.Intrinsics.Vector128{System.Single},MathSharp.MatrixSingle@)
  commentId: M:MathSharp.MatrixSingle.op_Multiply(System.Runtime.Intrinsics.Vector128{System.Single},MathSharp.MatrixSingle@)
  id: op_Multiply(System.Runtime.Intrinsics.Vector128{System.Single},MathSharp.MatrixSingle@)
  parent: MathSharp.MatrixSingle
  langs:
  - csharp
  - vb
  name: Multiply(Vector128<Single>, MatrixSingle)
  nameWithType: MatrixSingle.Multiply(Vector128<Single>, MatrixSingle)
  fullName: MathSharp.MatrixSingle.Multiply(System.Runtime.Intrinsics.Vector128<System.Single>, MathSharp.MatrixSingle)
  type: Operator
  source:
    remote:
      path: sources/MathSharp/Matrix/MatrixSingle.cs
      branch: dev-john
      repo: https://github.com/johnkellyoxford/MathSharp.git
    id: op_Multiply
    path: Matrix/MatrixSingle.cs
    startLine: 110
  assemblies:
  - MathSharp
  namespace: MathSharp
  syntax:
    content: public static MatrixSingle operator *(Vector128<float> vectorOfScalar, in MatrixSingle right)
    parameters:
    - id: vectorOfScalar
      type: System.Runtime.Intrinsics.Vector128{System.Single}
    - id: right
      type: MathSharp.MatrixSingle
    return:
      type: MathSharp.MatrixSingle
    content.vb: Public Shared Operator *(vectorOfScalar As Vector128(Of Single), ByRef right As MatrixSingle) As MatrixSingle
  overload: MathSharp.MatrixSingle.op_Multiply*
  nameWithType.vb: MatrixSingle.Multiply(Vector128(Of Single), ByRef MatrixSingle)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: MathSharp.MatrixSingle.Multiply(System.Runtime.Intrinsics.Vector128(Of System.Single), ByRef MathSharp.MatrixSingle)
  name.vb: Multiply(Vector128(Of Single), ByRef MatrixSingle)
- uid: MathSharp.MatrixSingle.op_UnaryNegation(MathSharp.MatrixSingle@)
  commentId: M:MathSharp.MatrixSingle.op_UnaryNegation(MathSharp.MatrixSingle@)
  id: op_UnaryNegation(MathSharp.MatrixSingle@)
  parent: MathSharp.MatrixSingle
  langs:
  - csharp
  - vb
  name: UnaryNegation(MatrixSingle)
  nameWithType: MatrixSingle.UnaryNegation(MatrixSingle)
  fullName: MathSharp.MatrixSingle.UnaryNegation(MathSharp.MatrixSingle)
  type: Operator
  source:
    remote:
      path: sources/MathSharp/Matrix/MatrixSingle.cs
      branch: dev-john
      repo: https://github.com/johnkellyoxford/MathSharp.git
    id: op_UnaryNegation
    path: Matrix/MatrixSingle.cs
    startLine: 115
  assemblies:
  - MathSharp
  namespace: MathSharp
  syntax:
    content: public static MatrixSingle operator -(in MatrixSingle matrix)
    parameters:
    - id: matrix
      type: MathSharp.MatrixSingle
    return:
      type: MathSharp.MatrixSingle
    content.vb: Public Shared Operator -(ByRef matrix As MatrixSingle) As MatrixSingle
  overload: MathSharp.MatrixSingle.op_UnaryNegation*
  nameWithType.vb: MatrixSingle.UnaryNegation(ByRef MatrixSingle)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: MathSharp.MatrixSingle.UnaryNegation(ByRef MathSharp.MatrixSingle)
  name.vb: UnaryNegation(ByRef MatrixSingle)
references:
- uid: MathSharp
  commentId: N:MathSharp
  name: MathSharp
  nameWithType: MathSharp
  fullName: MathSharp
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Intrinsics.Vector128{System.Single}
  commentId: T:System.Runtime.Intrinsics.Vector128{System.Single}
  parent: System.Runtime.Intrinsics
  definition: System.Runtime.Intrinsics.Vector128`1
  name: Vector128<Single>
  nameWithType: Vector128<Single>
  fullName: System.Runtime.Intrinsics.Vector128<System.Single>
  nameWithType.vb: Vector128(Of Single)
  fullName.vb: System.Runtime.Intrinsics.Vector128(Of System.Single)
  name.vb: Vector128(Of Single)
  spec.csharp:
  - uid: System.Runtime.Intrinsics.Vector128`1
    name: Vector128
    nameWithType: Vector128
    fullName: System.Runtime.Intrinsics.Vector128
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Runtime.Intrinsics.Vector128`1
    name: Vector128
    nameWithType: Vector128
    fullName: System.Runtime.Intrinsics.Vector128
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Intrinsics.Vector128`1
  commentId: T:System.Runtime.Intrinsics.Vector128`1
  isExternal: true
  name: Vector128<T>
  nameWithType: Vector128<T>
  fullName: System.Runtime.Intrinsics.Vector128<T>
  nameWithType.vb: Vector128(Of T)
  fullName.vb: System.Runtime.Intrinsics.Vector128(Of T)
  name.vb: Vector128(Of T)
  spec.csharp:
  - uid: System.Runtime.Intrinsics.Vector128`1
    name: Vector128
    nameWithType: Vector128
    fullName: System.Runtime.Intrinsics.Vector128
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Runtime.Intrinsics.Vector128`1
    name: Vector128
    nameWithType: Vector128
    fullName: System.Runtime.Intrinsics.Vector128
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Intrinsics
  commentId: N:System.Runtime.Intrinsics
  isExternal: true
  name: System.Runtime.Intrinsics
  nameWithType: System.Runtime.Intrinsics
  fullName: System.Runtime.Intrinsics
- uid: MathSharp.MatrixSingle.op_Addition*
  commentId: Overload:MathSharp.MatrixSingle.op_Addition
  name: Addition
  nameWithType: MatrixSingle.Addition
  fullName: MathSharp.MatrixSingle.Addition
- uid: MathSharp.MatrixSingle
  commentId: T:MathSharp.MatrixSingle
  parent: MathSharp
  name: MatrixSingle
  nameWithType: MatrixSingle
  fullName: MathSharp.MatrixSingle
- uid: MathSharp.MatrixSingle.op_Subtraction*
  commentId: Overload:MathSharp.MatrixSingle.op_Subtraction
  name: Subtraction
  nameWithType: MatrixSingle.Subtraction
  fullName: MathSharp.MatrixSingle.Subtraction
- uid: MathSharp.MatrixSingle.op_Multiply*
  commentId: Overload:MathSharp.MatrixSingle.op_Multiply
  name: Multiply
  nameWithType: MatrixSingle.Multiply
  fullName: MathSharp.MatrixSingle.Multiply
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: MathSharp.MatrixSingle.op_UnaryNegation*
  commentId: Overload:MathSharp.MatrixSingle.op_UnaryNegation
  name: UnaryNegation
  nameWithType: MatrixSingle.UnaryNegation
  fullName: MathSharp.MatrixSingle.UnaryNegation
